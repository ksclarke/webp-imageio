<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>webp-imageio</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>webp-imageio</name>
  <description>An imageio wrapper for the native webp library</description>
  <!-- Ignore, from POM template -->
  <url>http://projects.freelibrary.info/webp-imageio</url>

  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>https://opensource.org/licenses/Apache-2.0</url>
    </license>
  </licenses>

  <!-- Ignore, from POM template -->
  <scm>
    <connection>scm:git:git@github.com:ksclarke/webp-imageio.git</connection>
    <developerConnection>scm:git:git@github.com:ksclarke/webp-imageio.git</developerConnection>
    <url>git@github.com:ksclarke/webp-imageio.git</url>
  </scm>

  <!-- Ignore, from POM template -->
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/ksclarke/webp-imageio/issues</url>
  </issueManagement>

  <!-- Ignore, from POM template -->
  <developers>
    <developer>
      <email>ksclarke@ksclarke.io</email>
      <name>Kevin S. Clarke</name>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>America/New_York</timezone>
    </developer>
  </developers>

  <properties>
    <jar.plugin.version> 3.1.1</jar.plugin.version>
    <cmake.maven.plugin>3.7.2-b1</cmake.maven.plugin>
    <freelib.utils.version>0.8.9</freelib.utils.version>
    <codacy.plugin.version>1.0.2</codacy.plugin.version>

    <!-- Ignore checkstyle rules from POM template -->
    <checkstyle.skip>true</checkstyle.skip>
  </properties>

  <dependencies>
    <!-- Below dependencies are only used for testing -->
    <!-- Ignore first, from POM template -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/javase/java/</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-resource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/javase/resources/</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.googlecode.cmake-maven-project</groupId>
        <artifactId>cmake-maven-plugin</artifactId>
        <version>${cmake.maven.plugin}</version>
        <executions>
          <execution>
            <id>cmake-generate</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <sourcePath>${project.basedir}</sourcePath>
              <targetPath>${project.build.directory}/build</targetPath>
              <generator>${cmake.generator}</generator>
              <classifier>${cmake.classifier}</classifier>
            </configuration>
          </execution>
          <execution>
            <id>cmake-compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <projectDirectory>${project.build.directory}/build</projectDirectory>
              <classifier>${cmake.classifier}</classifier>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Ignore, from POM template -->
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
      </plugin>
      <!-- Ignore, from POM template -->
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>info.freelibrary</groupId>
            <artifactId>freelib-resources</artifactId>
            <version>${freelib.resources.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <stylesheetfile>javadocs.css</stylesheetfile>
          <nonavbar>true</nonavbar>
          <show>public</show>
          <nosince>true</nosince>
          <notimestamp>true</notimestamp>
          <bottom>Â </bottom>
          <detectLinks>false</detectLinks>
          <additionalJOptions>
            <additionalJOption>-J-Dhttp.agent=maven-javadoc-plugin-${project.name}</additionalJOption>
          </additionalJOptions>
          <links>
            <link>https://docs.oracle.com/javase/8/docs/api/</link>
          </links>
          <sourcepath>src/main/java:src/main/generated:src/javase/java</sourcepath>
        </configuration>
        <executions>
          <execution>
            <id>site-javadocs</id>
            <phase>site</phase>
            <goals>
              <goal>javadoc</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Ignore, from POM template -->
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <!-- Ignore, from POM template -->
      <plugin>
        <groupId>com.gavinmogan</groupId>
        <artifactId>codacy-maven-plugin</artifactId>
        <version>${codacy.plugin.version}</version>
      </plugin>
      <!-- Ignore, from POM template -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <forkMode>once</forkMode>
          <argLine>-Djava.library.path=${project.build.directory}/build/src/main/c ${jacoco.agent.arg}</argLine>
        </configuration>
      </plugin>
      <!-- Ignore, from POM template -->
      <plugin>
        <groupId>br.com.ingenieux</groupId>
        <artifactId>jbake-maven-plugin</artifactId>
      </plugin>
      <!-- Ignore, from POM template -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${jar.plugin.version}</version>
        <executions>
          <execution>
            <id>native-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classesDirectory>${project.build.directory}/build/src/main/c/</classesDirectory>
              <classifier>${jar.classifier}</classifier>
              <includes>
                <include>${library.extension}</include>
              </includes>
              <archive>
                <addMavenDescriptor>false</addMavenDescriptor>
              </archive>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>deploy</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <id>android-jar</id>
                <phase/>
              </execution>
              <execution>
                <id>native-jar</id>
                <phase/>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.googlecode.cmake-maven-project</groupId>
            <artifactId>cmake-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>cmake-generate</id>
                <phase/>
              </execution>
              <execution>
                <id>cmake-compile</id>
                <phase/>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-artifact</id>
                <phase>package</phase>
                <goals>
                  <goal>attach-artifact</goal>
                </goals>
                <configuration>
                  <artifacts>
                    <artifact>
                      <file>${project.build.directory}/webp-imageio-${project.version}-android.jar</file>
                      <type>jar</type>
                      <classifier>android</classifier>
                    </artifact>
                    <artifact>
                      <file>${project.build.directory}/webp-imageio-${project.version}-linux.jar</file>
                      <type>jar</type>
                      <classifier>linux</classifier>
                    </artifact>
                    <artifact>
                      <file>${project.build.directory}/webp-imageio-${project.version}-mac.jar</file>
                      <type>jar</type>
                      <classifier>mac</classifier>
                    </artifact>
                    <artifact>
                      <file>${project.build.directory}/webp-imageio-${project.version}-windows.jar</file>
                      <type>jar</type>
                      <classifier>windows</classifier>
                    </artifact>
                  </artifacts>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>android</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-versions</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireEnvironmentVariable>
                      <variableName>ANDROID_NDK_HOME</variableName>
                    </requireEnvironmentVariable>
                    <requireEnvironmentVariable>
                      <variableName>ANDROID_HOME</variableName>
                    </requireEnvironmentVariable>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <executable>ndk-build</executable>
              <workingDirectory>${project.basedir}/src/android</workingDirectory>
              <arguments>
                <argument>NDK_LIBS_OUT=${project.build.directory}/android-build/libs</argument>
                <argument>NDK_OUT=${project.build.directory}/android-build/obj</argument>
              </arguments>
            </configuration>
          </plugin>
          <!-- If we override the jar plugin we have to do twice the work -->
          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <version>${jar.plugin.version}</version>
            <executions>
              <execution>
                <id>android-jar</id>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <classesDirectory>${project.build.directory}/android-build/</classesDirectory>
                  <classifier>android</classifier>
                  <includes>
                    <include>libs/**/*.so</include>
                  </includes>
                  <archive>
                    <addMavenDescriptor>false</addMavenDescriptor>
                  </archive>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>linux-x86_64</id>
      <activation>
        <os>
          <name>Linux</name>
          <arch>!i386</arch>
        </os>
      </activation>
      <properties>
        <cmake.generator>Unix Makefiles</cmake.generator>
        <cmake.classifier>linux-x86_64</cmake.classifier>
        <jar.classifier>linux</jar.classifier>
        <library.extension>*.so</library.extension>
      </properties>
    </profile>
    <profile>
      <id>mac-x86_64</id>
      <activation>
        <os>
          <name>Mac OS X</name>
          <arch>x86_64</arch>
        </os>
      </activation>
      <properties>
        <cmake.generator>Unix Makefiles</cmake.generator>
        <cmake.classifier>mac-x86_64</cmake.classifier>
        <jar.classifier>mac</jar.classifier>
        <library.extension>*.dylib</library.extension>
      </properties>
    </profile>
    <profile>
      <id>windows-x86_64</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <cmake.generator>Unix Makefiles</cmake.generator>
        <cmake.classifier>windows-x86_64</cmake.classifier>
        <jar.classifier>windows</jar.classifier>
        <library.extension>*.dll</library.extension>
      </properties>
    </profile>
  </profiles>

  <!-- Ignore everything below here, from POM template -->

  <!-- Enables pushing project documentation up to an S3 bucket -->
  <distributionManagement>
    <site>
      <id>s3.site</id>
      <url>s3://projects.freelibrary.info/webp-imageio</url>
    </site>
  </distributionManagement>

  <!-- Pulls in standard FreeLibrary Project configuration options -->
  <parent>
    <artifactId>freelib-parent</artifactId>
    <groupId>info.freelibrary</groupId>
    <version>0.3.4</version>
  </parent>

</project>

